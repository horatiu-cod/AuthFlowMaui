@baseUrl = https://localhost:8843
@realm = dev
@api_client_uuid = 53aa90d9-0016-45a8-aa35-64c2e700ede4
@maui_client_uuid = 8eeaf694-956b-4e9f-998a-9aa7a42a604d
###@user_id = d9e05d87-b16f-4472-b5f3-66c9eb57555b
@client_secret = xrJ4rQG1UDbfpHGgqCeclkaSzedm8WQY
@client_name = api-client


### Get Client access_token
# @name client_token_request
POST {{baseUrl}}/realms/{{realm}}/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials&client_id={{client_name}}&client_secret={{client_secret}}

#### response
@client_access_token = {{client_token_request.response.body.access_token}}

### Get the client secret
# @name client_secret_request
GET {{baseUrl}}/admin/realms/{{realm}}/clients/{{api_client_uuid}}/client-secret
Content-Type: application/json
Authorization: Bearer {{client_access_token}}
 
#### response
###@client_secret = {{client_secret_request.response.body.$.value}}

### Create user
POST {{baseUrl}}/admin/realms/{{realm}}/users
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

{
	"firstName": "horatiu",
	"lastName": "dev",
	"email": "hg@g.com",
	"enabled": true,
	"credentials": [{
		"type": "password",
		"value": "s3cr3t",
		"temporary": false
	}],
	"username": "hg@g.com"
}

### get the user representation
# @name user_id_request
GET {{baseUrl}}/admin/realms/{{realm}}/users/?username=hg@g.com
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

#### response
@user_id = {{user_id_request.response.body.*.id}}
### Get client role representation by name
# @name client_role_request
GET  {{baseUrl}}/admin/realms/{{realm}}/clients/{{maui_client_uuid}}/roles/user_role
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

#### response
@user_role = {{client_role_request.response.body.*}}

### Add client-level roles to the user role mapping
POST {{baseUrl}}/admin/realms/{{realm}}/users/{{user_id}}/role-mappings/clients/{{maui_client_uuid}}
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

[
    {{user_role}}
]

### Delete user
DELETE {{baseUrl}}/admin/realms/{{realm}}/users/{{user_id}}
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

### update user
PUT {{baseUrl}}/admin/realms/{{realm}}/users/{{user_id}}
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

{
	"firstName": "hori",
	"lastName": "cod",
	"email": "tg@g.com",
	"enabled": true,
	"credentials": [{
		"type": "password",
		"value": "s3cr3t",
		"temporary": false
	}],
	"username": "tg@g.com"
}

### verify-email action
PUT {{baseUrl}}/admin/realms/{{realm}}/users/{{user_id}}/send-verify-email
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

### reset password email request
PUT {{baseUrl}}/admin/realms/{{realm}}/users/{{user_id}}/execute-actions-email
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

[
	"UPDATE_PASSWORD"
]

### reset password
PUT {{baseUrl}}/admin/realms/{{realm}}/users/{{user_id}}/reset-password
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

	{
		"type": "password",
    	"value": "s3cr3te",
		"temporary": "false"
	}

### get user credentials request
GET  {{baseUrl}}/admin/realms/{{realm}}/users/{{user_id}}/credentials
Content-Type: application/json
Authorization: Bearer {{client_access_token}}

